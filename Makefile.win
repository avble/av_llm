# edit to point to the VS++ x64 developer  
# Version information
AV_LLM_VERSION = 0.0.1-preview

# Directories
CMAKE_BUILD_PRESET = cpu 
BUILD_DIR = build-$(CMAKE_BUILD_PRESET)
STAGING_DIR = staging
# STAGING_FULL_DIR = $(shell realpath $(STAGING_DIR))
OUTPUT_DIR = output
INSTALL_BIN_DIR = bin
# INSTALL_CONFIG_DIR = etc\.av_llm
# MODEL_FILE = qwen1_5-0_5b-chat-q8_0.gguf
# MODEL_URL = https://huggingface.co/Qwen/Qwen1.5-0.5B-Chat-GGUF/resolve/main/$(MODEL_FILE)

# $call_me = 1
# !if /i $call_me == 1 
# 	call "E:\software_vs\VC\Auxiliary\Build\vcvars64.bat"
# !endif

# Commands
RMDIR = if exist "$(@)" rmdir /s /q "$(@)"
MKDIR = if not exist "$(@)" mkdir "$(@)"
COPY = xcopy /y /i /e
WGET = powershell -Command "Invoke-WebRequest -Uri '$(MODEL_URL)' -OutFile"

all: compile

$(BUILD_DIR):
	$(MKDIR) $(BUILD_DIR)

$(STAGING_DIR):
	$(MKDIR) $(STAGING_DIR)

$(OUTPUT_DIR):
	$(MKDIR) $(OUTPUT_DIR)

compile: $(BUILD_DIR)
	!if /i $(BUILD_DIR) == build-cpu
		# call "E:\software_vs\VC\Auxiliary\Build\vcvars64.bat"
		cmake --B $(BUILD_DIR) && cmake --build $(BUILD_DIR)
		# cmake -B build 
	!else
		# cmake -B build 
		cmake --preset $(CMAKE_BUILD_PRESET) && cmake --build $(BUILD_DIR)
	!endif

package-prepare: compile $(STAGING_DIR)
	$(MKDIR) $(STAGING_DIR)\$(INSTALL_BIN_DIR)
	# $(MKDIR) $(STAGING_DIR)\$(INSTALL_CONFIG_DIR)
	copy $(BUILD_DIR)\av_llm.exe $(STAGING_DIR)\$(INSTALL_BIN_DIR)
	copy $(BUILD_DIR)\bin\*.dll $(STAGING_DIR)\$(INSTALL_BIN_DIR)

package: package-prepare $(OUTPUT_DIR)
	makensis /DVERSION=$(AV_LLM_VERSION) /DSTAGING_DIR=E:\work\00_llm\av_llm\$(STAGING_DIR) scripts\installer.nsi
	# move scripts\av_llm-windows-installer-$(AV_LLM_VERSION).exe $(OUTPUT_DIR)

clean:
	$(RMDIR) $(BUILD_DIR)
	$(RMDIR) $(STAGING_DIR)
	$(RMDIR) $(OUTPUT_DIR)

install-test:
	$(OUTPUT_DIR)\av_llm-windows-installer-$(AV_LLM_VERSION).exe /S
